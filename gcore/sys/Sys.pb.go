// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Sys.proto

package sys

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_SysOK           Status = 0
	Status_SysUnauthorized Status = 1
	Status_SysOffline      Status = 2
	Status_SysDisabled     Status = 3
	Status_SysRatelimited  Status = 4
)

var Status_name = map[int32]string{
	0: "SysOK",
	1: "SysUnauthorized",
	2: "SysOffline",
	3: "SysDisabled",
	4: "SysRatelimited",
}

var Status_value = map[string]int32{
	"SysOK":           0,
	"SysUnauthorized": 1,
	"SysOffline":      2,
	"SysDisabled":     3,
	"SysRatelimited":  4,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ddaee89f28d1f015, []int{0}
}

type Tier int32

const (
	Tier_NormalPlayer Tier = 0
	Tier_Privileged   Tier = 1
	Tier_GameMaster   Tier = 2
	Tier_Admin        Tier = 3
)

var Tier_name = map[int32]string{
	0: "NormalPlayer",
	1: "Privileged",
	2: "GameMaster",
	3: "Admin",
}

var Tier_value = map[string]int32{
	"NormalPlayer": 0,
	"Privileged":   1,
	"GameMaster":   2,
	"Admin":        3,
}

func (x Tier) String() string {
	return proto.EnumName(Tier_name, int32(x))
}

func (Tier) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ddaee89f28d1f015, []int{1}
}

type StatusMsg struct {
	Status               Status   `protobuf:"varint,1,opt,name=Status,json=status,proto3,enum=Status" json:"Status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusMsg) Reset()         { *m = StatusMsg{} }
func (m *StatusMsg) String() string { return proto.CompactTextString(m) }
func (*StatusMsg) ProtoMessage()    {}
func (*StatusMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddaee89f28d1f015, []int{0}
}

func (m *StatusMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusMsg.Unmarshal(m, b)
}
func (m *StatusMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusMsg.Marshal(b, m, deterministic)
}
func (m *StatusMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusMsg.Merge(m, src)
}
func (m *StatusMsg) XXX_Size() int {
	return xxx_messageInfo_StatusMsg.Size(m)
}
func (m *StatusMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusMsg.DiscardUnknown(m)
}

var xxx_messageInfo_StatusMsg proto.InternalMessageInfo

func (m *StatusMsg) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_SysOK
}

type VersionData struct {
	CoreVersion          string   `protobuf:"bytes,1,opt,name=CoreVersion,json=coreVersion,proto3" json:"CoreVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionData) Reset()         { *m = VersionData{} }
func (m *VersionData) String() string { return proto.CompactTextString(m) }
func (*VersionData) ProtoMessage()    {}
func (*VersionData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddaee89f28d1f015, []int{1}
}

func (m *VersionData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionData.Unmarshal(m, b)
}
func (m *VersionData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionData.Marshal(b, m, deterministic)
}
func (m *VersionData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionData.Merge(m, src)
}
func (m *VersionData) XXX_Size() int {
	return xxx_messageInfo_VersionData.Size(m)
}
func (m *VersionData) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionData.DiscardUnknown(m)
}

var xxx_messageInfo_VersionData proto.InternalMessageInfo

func (m *VersionData) GetCoreVersion() string {
	if m != nil {
		return m.CoreVersion
	}
	return ""
}

type PingMsg struct {
	Time                 uint64   `protobuf:"varint,1,opt,name=Time,json=time,proto3" json:"Time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingMsg) Reset()         { *m = PingMsg{} }
func (m *PingMsg) String() string { return proto.CompactTextString(m) }
func (*PingMsg) ProtoMessage()    {}
func (*PingMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddaee89f28d1f015, []int{2}
}

func (m *PingMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingMsg.Unmarshal(m, b)
}
func (m *PingMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingMsg.Marshal(b, m, deterministic)
}
func (m *PingMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingMsg.Merge(m, src)
}
func (m *PingMsg) XXX_Size() int {
	return xxx_messageInfo_PingMsg.Size(m)
}
func (m *PingMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_PingMsg.DiscardUnknown(m)
}

var xxx_messageInfo_PingMsg proto.InternalMessageInfo

func (m *PingMsg) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type VerifyWorldQuery struct {
	RealmID              uint64   `protobuf:"varint,1,opt,name=RealmID,json=realmID,proto3" json:"RealmID,omitempty"`
	Build                uint32   `protobuf:"varint,2,opt,name=Build,json=build,proto3" json:"Build,omitempty"`
	Account              string   `protobuf:"bytes,3,opt,name=Account,json=account,proto3" json:"Account,omitempty"`
	IP                   string   `protobuf:"bytes,4,opt,name=IP,json=iP,proto3" json:"IP,omitempty"`
	Digest               []byte   `protobuf:"bytes,5,opt,name=Digest,json=digest,proto3" json:"Digest,omitempty"`
	Seed                 []byte   `protobuf:"bytes,6,opt,name=Seed,json=seed,proto3" json:"Seed,omitempty"`
	Salt                 []byte   `protobuf:"bytes,7,opt,name=Salt,json=salt,proto3" json:"Salt,omitempty"`
	GameAccount          string   `protobuf:"bytes,8,opt,name=GameAccount,json=gameAccount,proto3" json:"GameAccount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyWorldQuery) Reset()         { *m = VerifyWorldQuery{} }
func (m *VerifyWorldQuery) String() string { return proto.CompactTextString(m) }
func (*VerifyWorldQuery) ProtoMessage()    {}
func (*VerifyWorldQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddaee89f28d1f015, []int{3}
}

func (m *VerifyWorldQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyWorldQuery.Unmarshal(m, b)
}
func (m *VerifyWorldQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyWorldQuery.Marshal(b, m, deterministic)
}
func (m *VerifyWorldQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyWorldQuery.Merge(m, src)
}
func (m *VerifyWorldQuery) XXX_Size() int {
	return xxx_messageInfo_VerifyWorldQuery.Size(m)
}
func (m *VerifyWorldQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyWorldQuery.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyWorldQuery proto.InternalMessageInfo

func (m *VerifyWorldQuery) GetRealmID() uint64 {
	if m != nil {
		return m.RealmID
	}
	return 0
}

func (m *VerifyWorldQuery) GetBuild() uint32 {
	if m != nil {
		return m.Build
	}
	return 0
}

func (m *VerifyWorldQuery) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *VerifyWorldQuery) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *VerifyWorldQuery) GetDigest() []byte {
	if m != nil {
		return m.Digest
	}
	return nil
}

func (m *VerifyWorldQuery) GetSeed() []byte {
	if m != nil {
		return m.Seed
	}
	return nil
}

func (m *VerifyWorldQuery) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *VerifyWorldQuery) GetGameAccount() string {
	if m != nil {
		return m.GameAccount
	}
	return ""
}

type AnnounceRealmMsg struct {
	RealmID              uint64   `protobuf:"varint,1,opt,name=RealmID,json=realmID,proto3" json:"RealmID,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=Type,json=type,proto3" json:"Type,omitempty"`
	RealmName            string   `protobuf:"bytes,4,opt,name=RealmName,json=realmName,proto3" json:"RealmName,omitempty"`
	RealmDescription     string   `protobuf:"bytes,5,opt,name=RealmDescription,json=realmDescription,proto3" json:"RealmDescription,omitempty"`
	Build                uint32   `protobuf:"varint,6,opt,name=Build,json=build,proto3" json:"Build,omitempty"`
	Address              string   `protobuf:"bytes,7,opt,name=Address,json=address,proto3" json:"Address,omitempty"`
	ActivePlayers        uint32   `protobuf:"varint,8,opt,name=ActivePlayers,json=activePlayers,proto3" json:"ActivePlayers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnnounceRealmMsg) Reset()         { *m = AnnounceRealmMsg{} }
func (m *AnnounceRealmMsg) String() string { return proto.CompactTextString(m) }
func (*AnnounceRealmMsg) ProtoMessage()    {}
func (*AnnounceRealmMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddaee89f28d1f015, []int{4}
}

func (m *AnnounceRealmMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnnounceRealmMsg.Unmarshal(m, b)
}
func (m *AnnounceRealmMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnnounceRealmMsg.Marshal(b, m, deterministic)
}
func (m *AnnounceRealmMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnnounceRealmMsg.Merge(m, src)
}
func (m *AnnounceRealmMsg) XXX_Size() int {
	return xxx_messageInfo_AnnounceRealmMsg.Size(m)
}
func (m *AnnounceRealmMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_AnnounceRealmMsg.DiscardUnknown(m)
}

var xxx_messageInfo_AnnounceRealmMsg proto.InternalMessageInfo

func (m *AnnounceRealmMsg) GetRealmID() uint64 {
	if m != nil {
		return m.RealmID
	}
	return 0
}

func (m *AnnounceRealmMsg) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AnnounceRealmMsg) GetRealmName() string {
	if m != nil {
		return m.RealmName
	}
	return ""
}

func (m *AnnounceRealmMsg) GetRealmDescription() string {
	if m != nil {
		return m.RealmDescription
	}
	return ""
}

func (m *AnnounceRealmMsg) GetBuild() uint32 {
	if m != nil {
		return m.Build
	}
	return 0
}

func (m *AnnounceRealmMsg) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AnnounceRealmMsg) GetActivePlayers() uint32 {
	if m != nil {
		return m.ActivePlayers
	}
	return 0
}

type VerifyWorldResponse struct {
	Status               Status   `protobuf:"varint,1,opt,name=Status,json=status,proto3,enum=Status" json:"Status,omitempty"`
	Tier                 Tier     `protobuf:"varint,2,opt,name=Tier,json=tier,proto3,enum=Tier" json:"Tier,omitempty"`
	SessionKey           []byte   `protobuf:"bytes,3,opt,name=SessionKey,json=sessionKey,proto3" json:"SessionKey,omitempty"`
	GameAccount          uint64   `protobuf:"varint,4,opt,name=GameAccount,json=gameAccount,proto3" json:"GameAccount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyWorldResponse) Reset()         { *m = VerifyWorldResponse{} }
func (m *VerifyWorldResponse) String() string { return proto.CompactTextString(m) }
func (*VerifyWorldResponse) ProtoMessage()    {}
func (*VerifyWorldResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddaee89f28d1f015, []int{5}
}

func (m *VerifyWorldResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyWorldResponse.Unmarshal(m, b)
}
func (m *VerifyWorldResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyWorldResponse.Marshal(b, m, deterministic)
}
func (m *VerifyWorldResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyWorldResponse.Merge(m, src)
}
func (m *VerifyWorldResponse) XXX_Size() int {
	return xxx_messageInfo_VerifyWorldResponse.Size(m)
}
func (m *VerifyWorldResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyWorldResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyWorldResponse proto.InternalMessageInfo

func (m *VerifyWorldResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_SysOK
}

func (m *VerifyWorldResponse) GetTier() Tier {
	if m != nil {
		return m.Tier
	}
	return Tier_NormalPlayer
}

func (m *VerifyWorldResponse) GetSessionKey() []byte {
	if m != nil {
		return m.SessionKey
	}
	return nil
}

func (m *VerifyWorldResponse) GetGameAccount() uint64 {
	if m != nil {
		return m.GameAccount
	}
	return 0
}

type Info struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Info) Reset()         { *m = Info{} }
func (m *Info) String() string { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()    {}
func (*Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_ddaee89f28d1f015, []int{6}
}

func (m *Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Info.Unmarshal(m, b)
}
func (m *Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Info.Marshal(b, m, deterministic)
}
func (m *Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Info.Merge(m, src)
}
func (m *Info) XXX_Size() int {
	return xxx_messageInfo_Info.Size(m)
}
func (m *Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Info proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("Status", Status_name, Status_value)
	proto.RegisterEnum("Tier", Tier_name, Tier_value)
	proto.RegisterType((*StatusMsg)(nil), "StatusMsg")
	proto.RegisterType((*VersionData)(nil), "VersionData")
	proto.RegisterType((*PingMsg)(nil), "PingMsg")
	proto.RegisterType((*VerifyWorldQuery)(nil), "VerifyWorldQuery")
	proto.RegisterType((*AnnounceRealmMsg)(nil), "AnnounceRealmMsg")
	proto.RegisterType((*VerifyWorldResponse)(nil), "VerifyWorldResponse")
	proto.RegisterType((*Info)(nil), "Info")
}

func init() { proto.RegisterFile("Sys.proto", fileDescriptor_ddaee89f28d1f015) }

var fileDescriptor_ddaee89f28d1f015 = []byte{
	// 677 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x8d, 0x13, 0xdb, 0x69, 0x26, 0x97, 0xba, 0xdb, 0xaa, 0x32, 0xa1, 0x40, 0xb0, 0x78, 0xa8,
	0x2a, 0xe4, 0xa2, 0xf0, 0xd2, 0xd7, 0xb4, 0x41, 0x55, 0x55, 0x5a, 0x82, 0x0d, 0x45, 0x42, 0xe2,
	0x61, 0x13, 0x4f, 0xd2, 0x95, 0x7c, 0xd3, 0xee, 0xba, 0x92, 0xf9, 0x0d, 0xfe, 0x8b, 0x6f, 0xe0,
	0x23, 0xf8, 0x00, 0xb4, 0xeb, 0xa4, 0x4d, 0x23, 0x10, 0x4f, 0xce, 0x39, 0x3b, 0xbb, 0x99, 0x73,
	0x66, 0x0e, 0xb4, 0xc2, 0x52, 0xf8, 0x39, 0xcf, 0x64, 0xd6, 0x7f, 0xba, 0xc8, 0xb2, 0x45, 0x8c,
	0xc7, 0x1a, 0x4d, 0x8b, 0xf9, 0x31, 0x26, 0xb9, 0x2c, 0xab, 0x43, 0xef, 0x35, 0xb4, 0x42, 0x49,
	0x65, 0x21, 0xae, 0xc4, 0x82, 0xbc, 0x00, 0xbb, 0x02, 0xae, 0x31, 0x30, 0x0e, 0x7b, 0xc3, 0xa6,
	0x5f, 0xc1, 0xc0, 0x16, 0xfa, 0xeb, 0x1d, 0x43, 0xfb, 0x06, 0xb9, 0x60, 0x59, 0x3a, 0xa6, 0x92,
	0x92, 0x01, 0xb4, 0xcf, 0x32, 0x8e, 0x4b, 0x4a, 0x5f, 0x6a, 0x05, 0xed, 0xd9, 0x03, 0xe5, 0x3d,
	0x83, 0xe6, 0x84, 0xa5, 0x0b, 0xf5, 0x38, 0x01, 0xf3, 0x13, 0x4b, 0x50, 0x57, 0x99, 0x81, 0x29,
	0x59, 0x82, 0xde, 0x4f, 0x03, 0x9c, 0x1b, 0xe4, 0x6c, 0x5e, 0x7e, 0xc9, 0x78, 0x1c, 0x7d, 0x2c,
	0x90, 0x97, 0xc4, 0x85, 0x66, 0x80, 0x34, 0x4e, 0x2e, 0xc6, 0xcb, 0xda, 0x26, 0xaf, 0x20, 0xd9,
	0x03, 0xeb, 0xb4, 0x60, 0x71, 0xe4, 0xd6, 0x07, 0xc6, 0x61, 0x37, 0xb0, 0xa6, 0x0a, 0xa8, 0xfa,
	0xd1, 0x6c, 0x96, 0x15, 0xa9, 0x74, 0x1b, 0xba, 0x83, 0x26, 0xad, 0x20, 0xe9, 0x41, 0xfd, 0x62,
	0xe2, 0x9a, 0x9a, 0xac, 0xb3, 0x09, 0xd9, 0x07, 0x7b, 0xcc, 0x16, 0x28, 0xa4, 0x6b, 0x0d, 0x8c,
	0xc3, 0x4e, 0x60, 0x47, 0x1a, 0xa9, 0xd6, 0x42, 0xc4, 0xc8, 0xb5, 0x35, 0x6b, 0x0a, 0xc4, 0x48,
	0x73, 0x34, 0x96, 0x6e, 0x73, 0xc9, 0xd1, 0x58, 0x2a, 0xbd, 0xe7, 0x34, 0xc1, 0xd5, 0xbf, 0x6d,
	0x55, 0x7a, 0x17, 0x0f, 0x94, 0xf7, 0xcb, 0x00, 0x67, 0x94, 0xa6, 0x59, 0x91, 0xce, 0x50, 0x8b,
	0x50, 0xca, 0xff, 0x2d, 0x48, 0x79, 0x52, 0xe6, 0xb8, 0xec, 0xdb, 0x94, 0x65, 0x8e, 0xe4, 0x00,
	0x5a, 0xba, 0xfa, 0x9a, 0x26, 0xb8, 0xec, 0xbd, 0xc5, 0x57, 0x04, 0x39, 0x02, 0x47, 0x9f, 0x8e,
	0x51, 0xcc, 0x38, 0xcb, 0xa5, 0xf2, 0xdd, 0xd2, 0x45, 0x0e, 0xdf, 0xe0, 0x1f, 0xec, 0xb2, 0x37,
	0xed, 0x8a, 0x22, 0x8e, 0x42, 0x68, 0x6d, 0xca, 0xae, 0x0a, 0x92, 0x57, 0xd0, 0x1d, 0xcd, 0x24,
	0xbb, 0xc3, 0x49, 0x4c, 0x4b, 0xe4, 0x42, 0x0b, 0xec, 0x06, 0x5d, 0xba, 0x4e, 0x7a, 0x3f, 0x0c,
	0xd8, 0x5d, 0x9b, 0x59, 0x80, 0x22, 0xcf, 0x52, 0x81, 0xff, 0x5d, 0x1e, 0xf2, 0x44, 0x2d, 0x00,
	0x72, 0x3d, 0xbc, 0xde, 0xd0, 0xf2, 0x15, 0x50, 0x7b, 0x80, 0x9c, 0x3c, 0x07, 0x08, 0x51, 0xa8,
	0x8d, 0xb9, 0xc4, 0x52, 0xbb, 0xd1, 0x09, 0x40, 0xdc, 0x33, 0x9b, 0xc6, 0x9b, 0xda, 0xc5, 0x47,
	0xc6, 0xdb, 0x60, 0x5e, 0xa4, 0xf3, 0xec, 0xe8, 0xdb, 0xaa, 0x0b, 0xd2, 0x02, 0x2b, 0x2c, 0xc5,
	0x87, 0x4b, 0xa7, 0x46, 0x76, 0x61, 0x3b, 0x2c, 0xc5, 0xe7, 0x94, 0x16, 0xf2, 0x36, 0xe3, 0xec,
	0x3b, 0x46, 0x8e, 0x41, 0x7a, 0x00, 0xea, 0x7c, 0x3e, 0x8f, 0x59, 0x8a, 0x4e, 0x9d, 0x6c, 0x43,
	0x3b, 0x2c, 0xc5, 0x98, 0x09, 0x3a, 0x8d, 0x31, 0x72, 0x1a, 0x84, 0x40, 0x2f, 0x2c, 0x45, 0x40,
	0x25, 0xc6, 0x2c, 0x61, 0x12, 0x23, 0xc7, 0x3c, 0x3a, 0xab, 0x34, 0x10, 0x07, 0x3a, 0xd7, 0x19,
	0x4f, 0x68, 0x5c, 0xb9, 0xe2, 0xd4, 0xd4, 0x73, 0x13, 0xce, 0xee, 0x58, 0x8c, 0x8b, 0xd5, 0xf3,
	0xaa, 0xe5, 0x2b, 0x2a, 0x24, 0x72, 0xa7, 0xae, 0xda, 0x19, 0x45, 0x09, 0x4b, 0x9d, 0xc6, 0xf0,
	0xb7, 0x01, 0xed, 0x51, 0x21, 0x6f, 0x43, 0xe4, 0x77, 0x6c, 0x86, 0xe4, 0x04, 0x7a, 0xe7, 0x28,
	0xd7, 0x83, 0xb5, 0xef, 0x57, 0x99, 0xf5, 0x57, 0x99, 0xf5, 0xdf, 0xa9, 0xcc, 0xf6, 0x3b, 0xfe,
	0x5a, 0x95, 0x57, 0x23, 0x07, 0x60, 0xaa, 0x78, 0x91, 0x2d, 0x7f, 0x99, 0xb2, 0xfe, 0xfd, 0x2f,
	0xaf, 0x46, 0xde, 0x40, 0xf7, 0xd1, 0x2e, 0x92, 0x1d, 0x7f, 0x73, 0x37, 0xfb, 0xe0, 0xdf, 0xc7,
	0xdf, 0xab, 0x91, 0x13, 0x9d, 0xef, 0xd5, 0x68, 0xc9, 0x8e, 0xbf, 0x19, 0xce, 0xfe, 0x9e, 0xff,
	0x97, 0xd9, 0x7b, 0x35, 0xf2, 0x12, 0x20, 0xc0, 0x3c, 0xe3, 0x52, 0x4d, 0x81, 0x58, 0xbe, 0xfa,
	0x3c, 0x7e, 0x7c, 0xb8, 0x0d, 0x5d, 0x7d, 0xeb, 0x3d, 0x13, 0x12, 0x53, 0xe4, 0xa7, 0xd6, 0xd7,
	0x86, 0x28, 0xc5, 0xd4, 0xd6, 0x22, 0xdf, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0xcf, 0x7e, 0x3e,
	0x49, 0xb3, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	GetVersionData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionData, error)
	Ping(ctx context.Context, in *PingMsg, opts ...grpc.CallOption) (*PingMsg, error)
	AnnounceRealm(ctx context.Context, in *AnnounceRealmMsg, opts ...grpc.CallOption) (*StatusMsg, error)
	VerifyWorld(ctx context.Context, in *VerifyWorldQuery, opts ...grpc.CallOption) (*VerifyWorldResponse, error)
	ReportInfo(ctx context.Context, in *Info, opts ...grpc.CallOption) (*StatusMsg, error)
}

type authServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthServiceClient(cc *grpc.ClientConn) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) GetVersionData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionData, error) {
	out := new(VersionData)
	err := c.cc.Invoke(ctx, "/AuthService/GetVersionData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) Ping(ctx context.Context, in *PingMsg, opts ...grpc.CallOption) (*PingMsg, error) {
	out := new(PingMsg)
	err := c.cc.Invoke(ctx, "/AuthService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) AnnounceRealm(ctx context.Context, in *AnnounceRealmMsg, opts ...grpc.CallOption) (*StatusMsg, error) {
	out := new(StatusMsg)
	err := c.cc.Invoke(ctx, "/AuthService/AnnounceRealm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) VerifyWorld(ctx context.Context, in *VerifyWorldQuery, opts ...grpc.CallOption) (*VerifyWorldResponse, error) {
	out := new(VerifyWorldResponse)
	err := c.cc.Invoke(ctx, "/AuthService/VerifyWorld", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authServiceClient) ReportInfo(ctx context.Context, in *Info, opts ...grpc.CallOption) (*StatusMsg, error) {
	out := new(StatusMsg)
	err := c.cc.Invoke(ctx, "/AuthService/ReportInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	GetVersionData(context.Context, *empty.Empty) (*VersionData, error)
	Ping(context.Context, *PingMsg) (*PingMsg, error)
	AnnounceRealm(context.Context, *AnnounceRealmMsg) (*StatusMsg, error)
	VerifyWorld(context.Context, *VerifyWorldQuery) (*VerifyWorldResponse, error)
	ReportInfo(context.Context, *Info) (*StatusMsg, error)
}

// UnimplementedAuthServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthServiceServer struct {
}

func (*UnimplementedAuthServiceServer) GetVersionData(ctx context.Context, req *empty.Empty) (*VersionData, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersionData not implemented")
}
func (*UnimplementedAuthServiceServer) Ping(ctx context.Context, req *PingMsg) (*PingMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedAuthServiceServer) AnnounceRealm(ctx context.Context, req *AnnounceRealmMsg) (*StatusMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AnnounceRealm not implemented")
}
func (*UnimplementedAuthServiceServer) VerifyWorld(ctx context.Context, req *VerifyWorldQuery) (*VerifyWorldResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyWorld not implemented")
}
func (*UnimplementedAuthServiceServer) ReportInfo(ctx context.Context, req *Info) (*StatusMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportInfo not implemented")
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_GetVersionData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).GetVersionData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthService/GetVersionData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).GetVersionData(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Ping(ctx, req.(*PingMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_AnnounceRealm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnnounceRealmMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).AnnounceRealm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthService/AnnounceRealm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).AnnounceRealm(ctx, req.(*AnnounceRealmMsg))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_VerifyWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyWorldQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).VerifyWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthService/VerifyWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).VerifyWorld(ctx, req.(*VerifyWorldQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthService_ReportInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Info)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).ReportInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AuthService/ReportInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).ReportInfo(ctx, req.(*Info))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersionData",
			Handler:    _AuthService_GetVersionData_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _AuthService_Ping_Handler,
		},
		{
			MethodName: "AnnounceRealm",
			Handler:    _AuthService_AnnounceRealm_Handler,
		},
		{
			MethodName: "VerifyWorld",
			Handler:    _AuthService_VerifyWorld_Handler,
		},
		{
			MethodName: "ReportInfo",
			Handler:    _AuthService_ReportInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Sys.proto",
}

// WorldListenerClient is the client API for WorldListener service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorldListenerClient interface {
}

type worldListenerClient struct {
	cc *grpc.ClientConn
}

func NewWorldListenerClient(cc *grpc.ClientConn) WorldListenerClient {
	return &worldListenerClient{cc}
}

// WorldListenerServer is the server API for WorldListener service.
type WorldListenerServer interface {
}

// UnimplementedWorldListenerServer can be embedded to have forward compatible implementations.
type UnimplementedWorldListenerServer struct {
}

func RegisterWorldListenerServer(s *grpc.Server, srv WorldListenerServer) {
	s.RegisterService(&_WorldListener_serviceDesc, srv)
}

var _WorldListener_serviceDesc = grpc.ServiceDesc{
	ServiceName: "WorldListener",
	HandlerType: (*WorldListenerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "Sys.proto",
}
